pipeline {
    agent any

    environment {
        CONTAINER_NAME = "ts_backend_prod"
        DOCKER_IMAGE_TAG = "ts-backend:prod-${BUILD_NUMBER}"
        PORT = "5000"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/your-org/your-ts-backend-repo.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm ci'
            }
        }

        stage('Lint & Test') {
            steps {
                sh 'npm run lint'
                sh 'npm run test'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t ${DOCKER_IMAGE_TAG} .'
            }
        }

        stage('Stop Old Container') {
            steps {
                script {
                    sh """
                        existing_id=\$(docker ps -qf "name=${CONTAINER_NAME}")
                        if [ -n "\$existing_id" ]; then
                            docker stop \$existing_id
                            docker rm \$existing_id
                        fi
                    """
                }
            }
        }

        stage('Run New Container') {
            steps {
                sh """
                    docker run -d --name ${CONTAINER_NAME} -p ${PORT}:3000 ${DOCKER_IMAGE_TAG}
                """
            }
        }
    }

    post {
        failure {
            echo "❌ Build or Deploy Failed. Check logs."
        }
        success {
            echo "✅ Deployed successfully: http://your-domain.com:${PORT}"
        }
    }
}
